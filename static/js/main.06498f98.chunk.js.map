{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","img/default.jpg","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["module","exports","SearchBar","state","querry","handleQuerryChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","s","Searchbar","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","name","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","ImageGallaryItem","alt","prevImg","largeImg","onClick","ImageGalleryItem","ImageGalleryItemImage","src","defaultImg","ImageGallary","images","ImageGallery","map","image","tags","webformatURL","largeImageURL","id","App","searchQuerry","page","loading","showModal","modalImage","firstRequest","handleSearchFormSubmit","openModal","largeImage","closeModal","e","prevProps","prevState","setTimeout","fetch","then","response","ok","json","Promise","reject","Error","data","hits","catch","finally","message","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06498f98.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1L4IV\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2dMfj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1vUDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1YcS3\",\"SearchForm\":\"Searchbar_SearchForm__3o8wz\",\"SearchFormButton\":\"Searchbar_SearchFormButton__20O6t\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3tjxd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3IuUf\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { FaSearch } from 'react-icons/fa';\nimport s from './Searchbar.module.css';\n\nclass SearchBar extends Component {\n  state = {\n    querry: '',\n  };\n\n  handleQuerryChange = event => {\n    this.setState({ querry: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.querry.trim() === '') {\n      toast.error('Enter your request!');\n      return;\n    }\n    this.props.onSubmit(this.state.querry);\n    this.setState({ querry: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <FaSearch />\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            name=\"querry\"\n            value={this.state.querry}\n            onChange={this.handleQuerryChange}\n            className={s.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport defaultImg from '../../img/default.jpg';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGallaryItem = ({ alt, prevImg, largeImg, onClick }) => {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        src={prevImg ?? defaultImg}\n        alt={alt}\n        onClick={() => onClick(largeImg)}\n      />\n    </li>\n  );\n};\n\nImageGallaryItem.propTypes = {\n  alt: PropTypes.string,\n  prevImg: PropTypes.string,\n  largeImg: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallaryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGallaryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nfunction ImageGallary({ images, onClick }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGallaryItem\n          key={image.id}\n          alt={image.tags}\n          prevImg={image.webformatURL}\n          largeImg={image.largeImageURL}\n          onClick={onClick}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallary.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallary;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport SearchBar from './components/Searchbar';\nimport ImageGallary from './components/ImageGallery';\n//import ImagesApi from './services-api/ImagesAPI';\n//import Button from './components/Button';\n//import Modal from './components/Modal';\n\nconst API_KEY = `23556027-7518a6338651e19ee58531f7f`;\nconst BASE_URL = `https://pixabay.com/api/`;\nconst perPage = 12;\n\nclass App extends Component {\n  state = {\n    searchQuerry: '',\n    images: [],\n    page: 1,\n    loading: false,\n    error: null,\n\n    showModal: false,\n    modalImage: null,\n    firstRequest: true,\n  };\n\n  handleSearchFormSubmit = searchQuerry => {\n    this.setState({ searchQuerry });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuerry !== this.state.searchQuerry) {\n      this.setState({ loading: true, images: [] });\n      setTimeout(() => {\n        fetch(\n          `${BASE_URL}?q=${this.state.searchQuerry}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n        )\n          .then(response => {if(response.ok){return response.json()} return Promise.reject(new Error ('Ошибка на сервере'))})\n          .then(data => data.hits)\n          .then(images => this.setState({ images }))\n          .catch(error=>this.setState({error}))\n          .finally(this.setState({ loading: false }));\n      }, 3000);\n    }\n  }\n\n  openModal = largeImage => {\n    this.setState({ modalImage: largeImage });\n  };\n\n  closeModal = e => {\n    this.setState({ modalImage: null });\n  };\n\n  render() {\n    const { images, loading, error, modalImage, searchQuerry } = this.state;\n\n    return (\n      <>\n        <div>\n          <SearchBar onSubmit={this.handleSearchFormSubmit} />\n          {error && <h1>{error.message}</h1>}\n          {loading && <div>Загружаем</div>}\n          {images.length > 0 && (\n            <ImageGallary images={images} onClick={this.openModal} />\n          )}\n\n          {/* {modalImage && (\n            <Modal largeImage={modalImage} onClose={this.closeModal} />\n          )}\n          {loading && (\n            <div>\n              <Loader type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />\n            </div>\n          )}\n          {pictures.length > 0 && !loading && (\n            <Button onClick={this.imagesRequest} />\n          )}\n           */}\n          <ToastContainer />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}